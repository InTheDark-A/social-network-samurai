{"version":3,"sources":["components/Common/FormsControls/FormControls.module.css","components/Common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Login/Login.js"],"names":["module","exports","FormControl","input","meta","props","element","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength20","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","placeholder","name","component","type","validate","style","formSummaryError","connect","state","isAuth","auth","login","logout","to","formData","password","rememberMe","console","log"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,eAAe,mCAAmC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iKCG9JC,EAAc,SAAC,GAAqC,EAApCC,MAAqC,IAA9BC,EAA6B,EAA7BA,KAAkBC,GAAW,EAAvBC,QAAuB,2CACvDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OAAO,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACH,8BACKJ,EAAMQ,WAEVN,GAAY,+BAAM,4BAAIH,EAAKK,cAIvBK,EAAW,SAACT,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADiB,YACKC,EADL,mBAE/B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcF,GAAWY,QAG/CC,EAAQ,SAACX,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADc,YACQC,EADR,mBAE5B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWF,GAAWY,S,iCCrBzD,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCN3C,oGASME,EAAcH,YAAiB,IA6B/BI,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA3BL,SAAC,GAAqC,IAApCE,EAAmC,EAAnCA,aAAcjB,EAAqB,EAArBA,MAAOkB,EAAc,EAAdA,SACrC,OACI,uBAAMA,SAAUD,EAAaC,GAA7B,UACI,8BACI,cAAC,IAAD,CAAOC,YAAa,QAASC,KAAM,QAASC,UAAWd,IAAOe,KAAM,QAC7DC,SAAU,CAACf,IAAUK,OAEhC,8BACI,cAAC,IAAD,CAAOM,YAAa,WAAYC,KAAM,WAAYC,UAAWd,IAAOe,KAAM,WACnEC,SAAU,CAACf,IAAUK,OAEhC,gCACI,cAAC,IAAD,CAAOS,KAAM,WAAYF,KAAM,aAAcC,UAAW,UAD5D,kBAIIrB,GACA,qBAAKC,UAAWuB,IAAMC,iBAAtB,SACKzB,IAGT,8BACI,mDAyBD0B,uBAFS,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,UAEhB,CAACE,UAAOC,YAAjCL,EAjBD,SAAC9B,GAMX,OAAIA,EAAMgC,OACC,cAAC,IAAD,CAAUI,GAAI,aAElB,gCACH,uCACA,cAAClB,EAAD,CAAgBI,SAVH,SAACe,GACdrC,EAAMkC,MAAMG,EAASH,MAAOG,EAASC,SAAUD,EAASE,YACxDC,QAAQC,IAAIJ","file":"static/js/6.21b52524.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__3LzEh\",\"formControl\":\"FormControls_formControl__3_THR\",\"error\":\"FormControls_error__15mi5\",\"formSummaryError\":\"FormControls_formSummaryError__2zZr7\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        {hasError && <span><b>{meta.error}</b></span>}\r\n    </div>\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const CreateField = (placeHolder, name, validators, component) =>\r\n    <Field placeholder={placeHolder} name={name} component={component} validate={validators}/>","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormsControls/FormControls.module.css\";\r\n\r\nconst maxLength20 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({handleSubmit, error, onSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <Field placeholder={\"Login\"} name={\"login\"} component={Input} type={\"login\"}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} type={\"password\"}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\r\n            </div>\r\n            {\r\n                error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe);\r\n        console.log(formData);\r\n    };\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);"],"sourceRoot":""}
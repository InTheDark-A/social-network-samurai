{"version":3,"sources":["components/Common/FormsControls/FormControls.module.css","components/Common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","props","element","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","to","name","Message","message","maxLength50","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","onSumbit","Field","component","validate","placeholder","Dialogs","dialogsElements","dialogs","map","messagesElements","messages","m","dialogs_items","e","onSendMessageClick","DialogsContainer","compose","connect","state","dialogsData","newMessageBody","sendMessageCreator"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,eAAe,mCAAmC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iKCG9JC,EAAc,SAAC,GAAqC,EAApCC,MAAqC,IAA9BC,EAA6B,EAA7BA,KAAkBC,GAAW,EAAvBC,QAAuB,2CACvDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OAAO,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACH,8BACKJ,EAAMQ,WAEVN,GAAY,+BAAM,4BAAIH,EAAKK,cAIvBK,EAAW,SAACT,GAAW,IACzBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADiB,YACKC,EADL,mBAE/B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcF,GAAWY,QAG/CC,EAAQ,SAACX,GAAW,IACtBF,EAA6BE,EAA7BF,MAAgBY,GAAaV,EAAtBD,KADc,YACQC,EADR,mBAE5B,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWF,GAAWY,S,iCCrBzD,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCL3CpB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,0FCUvMqB,EAPI,SAACjB,GAChB,IAAIkB,EAAI,mBAAelB,EAAMmB,IAC7B,OAAQ,qBAAKd,UAAWe,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACJ,cAAC,IAAD,CAASC,GAAIL,EAAb,SAAoBlB,EAAMwB,UCAnBC,EAJC,SAACzB,GACb,OAAQ,qBAAKK,UAAWe,IAAEM,QAAlB,SAA4B1B,EAAM0B,W,oCCIxCC,EAAcb,YAAiB,IAsC/Bc,EAAsBC,YAAU,CAClCC,KAAM,qBADkBD,EAdL,SAAC7B,GACpB,OACI,uBAAM+B,SAAU/B,EAAMgC,aAAahC,EAAMiC,UAAzC,UACI,8BACI,cAACC,EAAA,EAAD,CAAOV,KAAM,UAAWW,UAAW1B,IAAU2B,SAAU,CAACxB,IAAUe,GAC3DU,YAAa,yBAExB,8BACI,kDAUDC,EAxCC,SAACtC,GAGb,IAAIuC,EAAkBvC,EAAMwC,QAAQC,KAAI,SAAArB,GAAC,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAEI,KAAiBL,GAAIC,EAAED,IAAZC,EAAED,OAC1EuB,EAAmB1C,EAAM2C,SAASF,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASlB,QAASkB,EAAElB,QAAoBP,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAOnF,OAAO,sBAAKd,UAAWe,IAAEoB,QAAlB,UACH,qBAAKnC,UAAWe,IAAEyB,cAAlB,SACKN,IAEL,sBAAKlC,UAAWe,IAAEuB,SAAlB,UACI,8BAAMD,IACN,cAACd,EAAD,CAAqBK,SAXT,SAACa,GACjB9C,EAAM+C,mBAAmBD,EAAEpB,SAC3BoB,EAAEpB,QAAU,a,gBCHdsB,EAAmBC,YACrBC,aATkB,SAACC,GACnB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3Ba,eAAgBF,EAAMC,YAAYC,eAClCV,SAAUQ,EAAMC,YAAYT,YAM5B,CAACI,mBAAoBO,MAFJL,CAIvBX,GAEaU","file":"static/js/5.1bfeafd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__3LzEh\",\"formControl\":\"FormControls_formControl__3_THR\",\"error\":\"FormControls_error__15mi5\",\"formSummaryError\":\"FormControls_formSummaryError__2zZr7\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n        {hasError && <span><b>{meta.error}</b></span>}\r\n    </div>\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const CreateField = (placeHolder, name, validators, component) =>\r\n    <Field placeholder={placeHolder} name={name} component={component} validate={validators}/>","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3u1ZQ\",\"dialogs_items\":\"Dialogs_dialogs_items__3bXdJ\",\"dialog\":\"Dialogs_dialog__2oo4P\",\"messages\":\"Dialogs_messages__1L5dg\",\"message\":\"Dialogs_message__JVtiX\",\"active\":\"Dialogs_active__1fnVy\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (<div className={s.dialog + \" \" + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>);\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (<div className={s.message}>{props.message}</div>);\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    // Артур заебал пошли по пиву.\r\n    // Я биба а ты боба.\r\n    let dialogsElements = props.dialogs.map(s => <DialogItem name={s.name} key={s.id} id={s.id}/>);\r\n    let messagesElements = props.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n\r\n    let addNewMessage = (e) => {\r\n        props.onSendMessageClick(e.message);\r\n        e.message = \"\";\r\n    };\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs_items}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageReduxForm onSumbit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst AddMessageForm = (props) => { // в другой файлик бы вынести\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSumbit)}>\r\n            <div>\r\n                <Field name={\"message\"} component={Textarea} validate={[required, maxLength50]}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: \"dialogsAddMessage\"\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n//import {withAuthRedirectComponent} from \"../../hoc/WithAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsData.dialogs,\r\n        newMessageBody: state.dialogsData.newMessageBody,\r\n        messages: state.dialogsData.messages\r\n    };\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps,\r\n        {onSendMessageClick: sendMessageCreator})\r\n    //, withAuthRedirectComponent\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}